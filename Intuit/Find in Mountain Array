/**
 * // This is the MountainArray's API interface.
 * // You should not implement it, or speculate about its implementation
 * class MountainArray {
 *   public:
 *     int get(int index);
 *     int length();
 * };
 */

class Solution {
public:
    int findInMountainArray(int target, MountainArray &mountainArr) {
        int p=-1;
        int l=0;
        int n=mountainArr.length();
        int r=n-1;
        
        while(l<r){
            int mid=l+(r-l)/2;
            int val=mountainArr.get(mid);
           
            if(mid>0 && mid<n-1){
                 int left=mountainArr.get(mid-1);
                 int right=mountainArr.get(mid+1);
            if(val>left && val>right){
                p=mid;
                break;
            }
            else if(val>left) l=mid;
            else r=mid;
            }
            else if(mid==0 && val>mountainArr.get(mid+1)){
                p=mid;
                break;
            }
            else if(mid==n-1 && val>mountainArr.get(mid-1)){
                p=mid;
                break;
            }
        }
        
        l=0,r=p;
        int mn=INT_MAX;
        while(l<=r){
            int mid=l+(r-l)/2;
            int val=mountainArr.get(mid);
            if(val==target) {
               return mid;
            }
            else if(val<target) l=mid+1;
            else r=mid-1;
        }
        l=p+1,r=n-1;
        while(l<=r){
            int mid=l+(r-l)/2;
            int val=mountainArr.get(mid);
            if(val==target){
                return mid;
            }
            else if(val>target) l=mid+1;
            else r=mid-1;
        }
        return -1;
        
    }
};
